name: "dyups Clean"
description: "Clean site with dyups"
inputs:
  ssh-host:
    description: "SSH HOST"
    required: true
  ssh-port:
    description: "SSH Port"
    required: true
  ssh-username:
    description: "SSH Username"
    required: true
  ssh-key:
    description: "SSH private key"
    required: true
  domain:
    description: "Deployed domain name"
    required: true
  dyups-server:
    description: "dyups service domain name"
    default: "https://dyups.xuexb.com"
    required: false
  dyups-token:
    description: "dyups service token"
    required: true
  container-name:
    description: "Docker container name, default is dyups-$domain"
    required: false
    default: ""
  proxy-host:
    description: "SSH Porxy HOST"
    required: false
    default: "sg01.ddns.xuexb.com"
  proxy-port:
    description: "SSH Porxy Port"
    required: false
    default: "22"
  proxy-username:
    description: "SSH Porxy Username"
    required: false
    default: "duke"
runs:
  using: "composite"
  steps:
    - name: Install SSH KEY
      uses: shimataro/ssh-key-action@v2
      with:
        key: ${{ inputs.ssh-key }} 
        known_hosts: unnecessary
        if_key_exists: replace
    - name: Generate deployment scripts
      shell: bash
      run: |
        echo '#!/bin/bash
        container_name="${{ inputs.container-name }}"
        if [ "$container_name" == "" ]; then container_name="dyups-${{ inputs.domain }}"; fi
        (docker ps -aq --filter "name=$container_name" | xargs docker rm -f || echo "Delete fail") > /dev/null 2>&1
        ' > /tmp/agent.sh
    - name: Clean on a remote machine
      id: deploy
      shell: bash
      run: |
        host=${{ inputs.ssh-host }}
        hosts=(${host//,/ })
        for key in "${hosts[@]}"; do
          res=$(ssh -p ${{ inputs.ssh-port }} -o StrictHostKeyChecking=no -o ProxyCommand="ssh -p ${{ inputs.proxy-port }} -o StrictHostKeyChecking=no -W %h:%p ${{ inputs.proxy-username }}@${{ inputs.proxy-host }}" "${{ inputs.ssh-username }}@$key" 'bash -s' < /tmp/agent.sh)
          code=$?
          if [ "$code" != "0" ]; then
            echo "$key 删除失败，状态码：$code ，信息：$res"
          fi
        done
    - name: Unregister a dyups domain name
      shell: bash
      run: |
          # 注销 dyups ，会自动同步
          dyupsurl="${{ inputs.dyups-server }}/api/${{ inputs.domain }}?r=$RANDOM"
          httpcode=$(curl -sL -w '%{http_code}' -H 'x-dyups-token: ${{ inputs.dyups-token }}' -X DELETE $dyupsurl -o /dev/null)
          if [ "$httpcode" != "200" ]; then
            echo "注册 dyups 失败，响应码：$httpcode"
            exit 20
          fi